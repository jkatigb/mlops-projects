name: Trivy Security Scan

on:
  pull_request:
    paths-ignore:
      - '**.md'
      - 'LICENSE'
      - '.gitignore'
  push:
    branches: [main]
  schedule:
    # Run daily security scans at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:

jobs:
  trivy-scan:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Run Trivy vulnerability scanner in repo mode
        uses: aquasecurity/trivy-action@v0.16.0
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH,MEDIUM'
          exit-code: '0'  # Don't fail the build, just report
          
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'
          
      - name: Run Trivy for critical vulnerabilities only
        uses: aquasecurity/trivy-action@v0.16.0
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'table'
          severity: 'CRITICAL'
          exit-code: '1'  # Fail on critical vulnerabilities
          
      - name: Run Trivy config scan for misconfigurations
        uses: aquasecurity/trivy-action@v0.16.0
        with:
          scan-type: 'config'
          scan-ref: '.'
          format: 'table'
          severity: 'CRITICAL,HIGH'
          exit-code: '1'
          
      - name: Run Trivy secret scan
        uses: aquasecurity/trivy-action@v0.16.0
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'table'
          scanners: 'secret'
          exit-code: '1'
          
      - name: Run Trivy license scan
        uses: aquasecurity/trivy-action@v0.16.0
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'table'
          scanners: 'license'
          exit-code: '0'  # Don't fail on license issues, just report
          
      - name: Create issue on critical findings
        if: failure() && github.event_name == 'schedule'
        uses: actions/github-script@v7
        with:
          script: |
            const title = `Security Alert: Critical vulnerabilities found - ${new Date().toISOString().split('T')[0]}`;
            const body = `Critical security vulnerabilities were detected in the scheduled security scan. 
            
            Please review the [workflow run](${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}) for details.
            
            **Action Required**: Address critical vulnerabilities immediately.`;
            
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: title,
              body: body,
              labels: ['security', 'critical', 'automated']
            });
            
      - name: Slack notification on failure
        if: failure()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_CHANNEL: 'security-alerts'
          SLACK_COLOR: 'danger'
          SLACK_MESSAGE: |
            :rotating_light: Security scan failed!
            Repository: ${{ github.repository }}
            Branch: ${{ github.ref_name }}
            Triggered by: ${{ github.event_name }}
            View details: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          SLACK_TITLE: 'Trivy Security Scan Failed'
          SLACK_USERNAME: 'Security Bot'
