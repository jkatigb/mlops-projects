[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "{{cookiecutter.project_slug}}"
version = "0.1.0"
description = "{{cookiecutter.description}}"
authors = [ { name = "{{cookiecutter.author_name}}", email = "{{cookiecutter.author_email}}" } ]
license = { text = "{{cookiecutter.open_source_license}}" }
readme = "README.md"
requires-python = ">={{cookiecutter.python_version}}"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: {{cookiecutter.python_version}}",
]

[project.dependencies]
# Core ML dependencies
numpy = ">=1.24.0,<2.0.0"
pandas = ">=2.0.0,<3.0.0"
scikit-learn = ">=1.3.0,<2.0.0"
{% if cookiecutter.include_gpu_support == 'yes' -%}
torch = ">=2.0.0,<3.0.0"
{% endif -%}

# Data versioning and experiment tracking
dvc = {extras = ["{{cookiecutter.dvc_remote_type}}"], version = ">=3.0.0,<4.0.0"}
{% if cookiecutter.use_mlflow == 'yes' -%}
mlflow = ">=2.8.0,<3.0.0"
{% endif -%}
{% if cookiecutter.use_wandb == 'yes' -%}
wandb = ">=0.16.0,<1.0.0"
{% endif -%}

# Data validation and monitoring
{% if cookiecutter.include_data_validation == 'yes' -%}
great-expectations = ">=0.18.0,<1.0.0"
pandera = ">=0.17.0,<1.0.0"
{% endif -%}
{% if cookiecutter.include_model_monitoring == 'yes' -%}
evidently = ">=0.4.0,<1.0.0"
{% endif -%}

# API and serving
{% if cookiecutter.include_api_service == 'yes' -%}
fastapi = ">=0.104.0,<1.0.0"
uvicorn = {extras = ["standard"], version = ">=0.24.0,<1.0.0"}
pydantic = ">=2.0.0,<3.0.0"
{% endif -%}

# Utilities
python-dotenv = ">=1.0.0,<2.0.0"
pyyaml = ">=6.0,<7.0"
structlog = ">=23.0.0,<24.0.0"
typer = ">=0.9.0,<1.0.0"
hydra-core = ">=1.3.0,<2.0.0"

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "pre-commit>=3.4.0",
    "bandit>=1.7.0",
    "safety>=2.3.0",
    "pylint>=3.0.0",
    "coverage[toml]>=7.3.0",
]
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.0.0",
    "mkdocstrings[python]>=0.24.0",
]
notebook = [
    "jupyter>=1.0.0",
    "notebook>=7.0.0",
    "ipykernel>=6.25.0",
    "jupyterlab>=4.0.0",
]

[project.scripts]
{{cookiecutter.project_slug}} = "{{cookiecutter.project_slug}}.cli:app"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
"{{cookiecutter.project_slug}}" = ["py.typed"]

[tool.black]
line-length = 88
target-version = ["py{{cookiecutter.python_version.replace('.', '')}}"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "{{cookiecutter.python_version}}"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--cov={{cookiecutter.project_slug}}",
    "--cov-branch",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    "--cov-fail-under=80",
]
testpaths = ["tests"]
pythonpath = ["src"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["src"]
branch = true
parallel = true
omit = [
    "*/tests/*",
    "*/__init__.py",
]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false

[tool.pylint]
max-line-length = 88
disable = [
    "C0111",  # missing-docstring
    "C0103",  # invalid-name
    "R0903",  # too-few-public-methods
    "R0913",  # too-many-arguments
    "W0105",  # pointless-string-statement
]

[tool.bandit]
exclude_dirs = ["tests", "scripts"]
skips = ["B101", "B601"]
